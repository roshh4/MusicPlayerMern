{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\music player\\\\FinalMusicPlayerMern\\\\FinalMusicPlayerMern\\\\client\\\\src\\\\PlaylistDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './PlaylistDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistDetails = ({\n  setSelectedSong\n}) => {\n  _s();\n  const {\n    playlistId\n  } = useParams();\n  const [playlist, setPlaylist] = useState(null);\n  useEffect(() => {\n    const fetchPlaylistDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}`);\n        console.log('Playlist Details Response:', response);\n        if (response.ok) {\n          const data = await response.json();\n          setPlaylist(data.playlist);\n        }\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    fetchPlaylistDetails();\n  }, [playlistId]);\n  const handleSongClick = song => {\n    console.log(song);\n    setSelectedSong(song);\n  };\n  const handlePlaySong = song => {\n    setSelectedSong(song);\n    console.log(`Playing ${song.name}`);\n  };\n  const handleRemoveSong = async songId => {\n    try {\n      const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}/removeSong/${songId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPlaylist(data.playlist);\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('An error occurred while removing the song:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-details\",\n    children: playlist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"planame\",\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Updated on \", new Date(playlist.lastUpdated).toLocaleDateString('en-US', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: playlist.tracks.map(track => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"play\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/images/play.PNG`,\n                alt: \"Play\",\n                onClick: () => handlePlaySong(track)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/images/${track.imageURL}`,\n                alt: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"name\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"artist\",\n              children: track.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: track.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"play\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/images/delete1.PNG`,\n                alt: \"del\",\n                onClick: () => handleRemoveSong(track._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, track._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistDetails, \"K8ZJzDtShhMBOtohifCtY8K+ekY=\", false, function () {\n  return [useParams];\n});\n_c = PlaylistDetails;\nexport default PlaylistDetails;\nvar _c;\n$RefreshReg$(_c, \"PlaylistDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","PlaylistDetails","setSelectedSong","_s","playlistId","playlist","setPlaylist","fetchPlaylistDetails","response","fetch","console","log","ok","data","json","error","handleSongClick","song","handlePlaySong","name","handleRemoveSong","songId","method","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","lastUpdated","toLocaleDateString","day","month","year","tracks","map","track","src","alt","onClick","imageURL","artist","duration","_id","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/music player/FinalMusicPlayerMern/FinalMusicPlayerMern/client/src/PlaylistDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './PlaylistDetails.css';\r\n\r\nconst PlaylistDetails = ({ setSelectedSong }) => {\r\n  const { playlistId } = useParams();\r\n  const [playlist, setPlaylist] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylistDetails = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}`);\r\n        console.log('Playlist Details Response:', response);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPlaylist(data.playlist);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred:', error);\r\n      }\r\n    };\r\n\r\n    fetchPlaylistDetails();\r\n  }, [playlistId]);\r\n\r\n  const handleSongClick = (song) => {\r\n    console.log(song);\r\n    setSelectedSong(song);\r\n  };\r\n\r\n  const handlePlaySong = (song) => {\r\n    setSelectedSong(song);\r\n    console.log(`Playing ${song.name}`);\r\n  };\r\n\r\n  const handleRemoveSong = async (songId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3002/api/playlists/${playlistId}/removeSong/${songId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPlaylist(data.playlist);\r\n        window.location.reload(); \r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while removing the song:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlist-details\">\r\n      {playlist ? (\r\n        <div>\r\n          <p className='planame'>{playlist.name}</p>\r\n          <p>Last Updated on {new Date(playlist.lastUpdated).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })}</p>\r\n          <table>\r\n            <tbody>\r\n              {playlist.tracks.map((track) => (\r\n                <tr key={track._id}>\r\n                  <td className='play'>\r\n                    <img src={`/images/play.PNG`} alt=\"Play\" onClick={() => handlePlaySong(track)} />\r\n                  </td>\r\n                  <td className='image'>\r\n                    <img src={`/images/${track.imageURL}`} alt={track.name} />\r\n                  </td>\r\n                  <td className='name'>{track.name}</td>\r\n                  <td className='artist'>{track.artist}</td>\r\n                  <td>{track.duration}</td>\r\n                  <td className='play'>\r\n                    <img src={`/images/delete1.PNG`} alt=\"del\" onClick={() => handleRemoveSong(track._id)} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}